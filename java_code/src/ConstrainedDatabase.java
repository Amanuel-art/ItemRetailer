
import org.json.simple.JSONObject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class ConstrainedDatabase {
    private static String id;
    private static String name;

    public static void commentWithConstraints(Connection connection,JSONObject jsonObject) throws SQLException {
        String sql = "INSERT INTO `commentwithconstraints`(`id`, `name`,`author`,`created_utc`,`parent_id`, `body`,`score`,`link_id`,`subreddit_id`) VALUES (?,?,?,?,?,?,?,?,?)";

        PreparedStatement stmt1 = connection.prepareStatement(sql);
        id = (String) jsonObject.get("id");
        name = (String) jsonObject.get("name");
        String author = (String) jsonObject.get("author");
        String created_utc = (String) jsonObject.get("created_utc");
        String parent_id = (String) jsonObject.get("parent_id");
        String body = (String) jsonObject.get("body");
        long score = (long) jsonObject.get("score");
        String link_id = (String) jsonObject.get("link_id");
        String subreddit_id = (String) jsonObject.get("subreddit_id");


        stmt1.setString(1, id);
        stmt1.setString(2, name);
        stmt1.setString(3, author);
        stmt1.setString(4, created_utc);
        stmt1.setString(5, parent_id);
        stmt1.setString(6, body);
        stmt1.setLong(7, score);
        stmt1.setString(8,link_id);
        stmt1.setString(9,subreddit_id);
        stmt1.execute();
        stmt1.close();
    }
    public static void linkWithConstraints(Connection connection,JSONObject jsonObject) throws SQLException {
        String sql= "INSERT INTO linkwithconstraints(link_id,name,subreddit_id) VALUES (?, ?, ?)";
        PreparedStatement stmt2 = connection.prepareStatement(sql);
        String name = (String) jsonObject.get("name");
        String link_id = (String) jsonObject.get("link_id");
        stmt2.setString(1, link_id);
        stmt2.setString(2,name);
        String subreddit_id = (String) jsonObject.get("subreddit_id");
        stmt2.setString(3, subreddit_id);
        stmt2.execute();
        stmt2.close();
    }
    public static void subredditWithConstraints(Connection connection,JSONObject jsonObject) throws SQLException {
        String sql="INSERT INTO subredditwithconstrains(subreddit_id,name) VALUES(?,?)";
        PreparedStatement stmt3 = connection.prepareStatement(sql);

        String subreddit_id = (String) jsonObject.get("subreddit_id");
        String subreddit = (String) jsonObject.get("subreddit");

        stmt3.setString(1,subreddit_id);
        stmt3.setString(2, subreddit);
        stmt3.execute();
        stmt3.close();
    }
    public static boolean doesSubredditExist(Connection connection, JSONObject jsonObject) {
        try {

            String sql = "SELECT `subreddit_id`, `name` FROM subredditwithconstrains WHERE  `subreddit_id`=?";
            String subreddit_id = (String) jsonObject.get("subreddit_id");
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, subreddit_id);

            // execute the preparedStatement and return the resultSet object generated by the query
            ResultSet rs = preparedStatement.executeQuery();

            // returns true if there is already a record with that id
            if (rs.next()) {
                return true;
            }

            //System.out.println("insertion in subreddit was successful");
            preparedStatement.close();
        } catch (SQLException throwable) {
            throwable.printStackTrace();
        }
        return false;
    }
    public static boolean doesLinkExist(Connection connection, JSONObject jsonObject) {
        try {

            String sql = "SELECT `link_id`, `name` FROM `linkwithconstraints` WHERE  `link_id`=?";
            String link_id = (String) jsonObject.get("link_id");
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, link_id);

            // execute the preparedStatement and return the resultSet object generated by the query
            ResultSet rs = preparedStatement.executeQuery();

            // returns true if there is already a record with that id
            if (rs.next()) {
                return true;
            }

            //System.out.println("insertion in subreddit was successful");
            preparedStatement.close();
        } catch (SQLException throwable) {
            throwable.printStackTrace();
        }
        return false;
    }
    public static boolean doesCommentExist(Connection connection, JSONObject jsonObject) {
        try {

            String sql = "SELECT `id`, `name`, `author`,`created_utc`,`parent_id`,`body`,`score` FROM `commentwithconstraints` WHERE  `id`=?";
            String id = (String) jsonObject.get("id");
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, id);

            // execute the preparedStatement and return the resultSet object generated by the query
            ResultSet rs = preparedStatement.executeQuery();

            // returns true if there is already a record with that id
            if (rs.next()) {
                return true;
            }

            //System.out.println("insertion in subreddit was successful");
            preparedStatement.close();
        } catch (SQLException throwable) {
            throwable.printStackTrace();
        }
        return false;
    }
}
